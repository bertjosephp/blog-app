{{! Partial for a single post }}
<div class="post">
    <div class="post-avatar">
        <!-- the user's avatar -->
        <img src="{{#if this.avatar_url}}
                        {{this.avatar_url}}
                    {{else}}
                        /avatar/{{this.username}}.png
                    {{/if}}" 
                    alt="User Avatar" 
                    class="post-avatar-img">
    </div>
    <div class="post-content preserve-newlines">
        <!-- the post -->
        <h3>{{this.title}}</h3>
        <p>{{this.content}}</p>
        <div class="post-status-bar">
            <!-- everything that is shown in the status bar -->
            <div class="like-container">
                {{#if loggedIn}}
                    <button class="like-button" data-id="{{this.id}}" onclick="handleLikeClick(event)"
                            style="color: {{#if this.isLikedByUser}}white{{else}}gray{{/if}};
                                    background-color: {{#if this.isLikedByUser}}red{{else}}white{{/if}};
                                    border-color: {{#if this.isLikedByUser}}red{{else}}gray{{/if}}">
                        â™¥
                    </button>
                {{/if}}
                <span class="like-count">{{this.likes}} Likes</span>
            </div>
            <span class="post-info">Posted by {{this.username}} on {{this.timestamp}}</span>
            <!-- font awesome  trashcan = <i class="fas fa-trash-alt"> </i>-->
        </div>        
    </div>
</div>
<script>

    function handleLikeClick(event) {
        const postId = event.target.getAttribute('data-id');

        // you might want to "fetch" something...        
        fetch(`/like/${postId}`, {
            method: 'POST',
            headers: {
                'Accept': 'application/json'
            }
        })
        .then(res => res.json())
        .then(data => {
            // toggle like button
            const likeButton = event.target;
            likeButton.style.color = data.isLiked ? 'white' : 'gray';
            likeButton.style.backgroundColor = data.isLiked ? 'red' : 'white';
            likeButton.style.borderColor = data.isLiked ? 'red' : 'gray';

            // update likes in real time
            const likeCountElement = event.target.parentElement.querySelector('.like-count');
            likeCountElement.textContent = `${data.likes} Likes`;
        })
        .catch(err => console.error('Error: ', err));
    }

    function handleDeleteClick(event) {
        const buttonElement = event.target.closest('.delete-button');
        const postId = buttonElement.getAttribute('data-id');        

        // you might want to "fetch" something...        
        
    }
</script>